//
//  ProductListInteractor.swift
//  iOSAssignment
//
//  Created by David Velarde on 18/12/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductListBusinessLogic {
    func initialLoad(request: ProductList.InitialLoad.Request)
    func startProductInteraction(request: ProductList.ProductInteraction.Request)
    func updateCart(request: ProductList.CartUpdate.Request)
}

protocol ProductListDataStore {
    //var name: String { get set }
}

class ProductListInteractor: ProductListBusinessLogic, ProductListDataStore {
    
    var presenter: ProductListPresentationLogic?
    
    var products = [CartProduct]()
    
    lazy var productListWorker: ProductListWorkerInterface = {
        return ProductListWorker()
    }()
    
    lazy var cartWorker: CartWorkerInterface = {
        return CartWorker()
    }()
  
    // MARK: Do something
  
    func initialLoad(request: ProductList.InitialLoad.Request) {
        
    }
    
    func updateCart(request: ProductList.CartUpdate.Request) {
        
    }
    
    func startProductInteraction(request: ProductList.ProductInteraction.Request) {
        
    }
}
