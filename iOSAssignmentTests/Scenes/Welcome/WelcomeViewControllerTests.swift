//
//  WelcomeViewControllerTests.swift
//  iOSAssignment
//
//  Created by David Velarde on 18/12/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import iOSAssignment
import XCTest

class WelcomeViewControllerTests: XCTestCase {

    // MARK: Subject under test
  
    var sut: WelcomeViewController!
    var window: UIWindow!
  
    // MARK: Test lifecycle
  
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupWelcomeViewController()
    }
  
    override func tearDown() {
        window = nil
        super.tearDown()
    }
  
    // MARK: Test setup
    
    class WelcomeRouterSpy: WelcomeRouter {
        var didRouteToProductList = false
        override func routeToProductList() {
            didRouteToProductList = true
        }
    }
  
    func setupWelcomeViewController() {
        sut = WelcomeViewController()
    }
  
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
  
    // MARK: Tests
  
    func testWelcomeViewAndViewLoadedAreEqual() {
        loadView()
        
        XCTAssertTrue(sut.view is WelcomeView, "Welcome View is from class WelcomeView")
        XCTAssertEqual(sut.welcomeView, sut.view, "View Loaded should be Welcome View")
    }
  
    func testGoToListButtonExists() {
        
        loadView()
        
        XCTAssertTrue(sut.welcomeView.subviews.contains(sut.welcomeView.goToProductListButton), "Go to product list button should be in the view hierarchy")
        XCTAssertEqual(sut.welcomeView.goToProductListButton.isHidden, false, "Go to product list button should be visible")
    }
    
    func testGoToListButtonHasTitle() {
        loadView()
        
        XCTAssertEqual(sut.welcomeView.goToProductListButton.title(for: .normal), "Go to Product List", "\"Go To Product List\" should the button title")
    }
    
    func testTapOnButtonGoesToProductList() {
        
        let spy = WelcomeRouterSpy()
        spy.viewController = sut
        sut.router = spy
        
        loadView()
        sut.welcomeView.goToProductListButton.sendActions(for: .touchUpInside)
        
        XCTAssertTrue(spy.didRouteToProductList, "Touch Up Inside in button should trigger routing to product list")
        
        
    }
}
